---
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  labels:
    app: "{{ .Release.Name }}"
  name: "{{ .Release.Name }}"
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: "{{ .Release.Name }}"
  template:
    metadata:
      labels:
        app: "{{ .Release.Name }}"
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: acceleration
                operator: In
                values:
                - none
      initContainers:
      - name: volume-mount-set-www-data-permissions
        image: busybox
        command: ["sh", "-c", "chmod -R 777 /tmp/docker"]
        volumeMounts:
        - name: data
          mountPath: /tmp/docker
      containers:
      - image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        name: "{{ .Release.Name }}"
        env:
        {{- if not .Values.externalDatabase.enabled }}
        - name: SQLITE_DATABASE
          value: mydb
        {{- else}}
        - name: MYSQL_HOST
          value: {{ .Values.externalDatabase.host | quote }}
        - name: MYSQL_DATABASE
          value: {{ .Values.externalDatabase.database | quote }}
        - name: MYSQL_USER
          value: {{ .Values.externalDatabase.user | quote }}
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.externalDatabase.passwordSecret | quote }}
              key: mysql-password
        {{- end}}
        - name: NEXTCLOUD_ADMIN_USER
          value: {{ if .Values.user.username}}{{ .Values.user.username }}{{else}}admin{{end}}
        - name: NEXTCLOUD_ADMIN_PASSWORD
          value: {{ if .Values.user.password}}{{ .Values.user.password }}{{else}}adminpassword{{end}}
        - name: NEXTCLOUD_TRUSTED_DOMAINS
          value: nextcloud.k8s-prod.pharmb.io
        ports:
          - containerPort: 80
        resources:
        {{ if .Values.resources }}
{{ toYaml .Values.resources | indent 12 }}
        {{ else }}
          limits:
            cpu: "500"
            memory: 500Mi
          requests:
            cpu: "100m"
            memory: 200Mi
        {{end}}
        volumeMounts:
        - mountPath: /var/www/html/data/
          name: data
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
      volumes:
      {{ if .Values.persistence.existingClaim }}
      - persistentVolumeClaim:
          claimName: {{ .Values.persistence.existingClaim }}
        name: data
      {{else}}
      - emptyDir: {}
        name: data
      {{end}}
