{{- range .Values.users }}

apiVersion: apps/v1beta2
kind: Deployment
metadata:
  labels:
    app: "ml-container-{{ . }}"
  name: "ml-container-{{ . }}"
  namespace: labinf
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: "ml-container-{{ . }}"
  template:
    metadata:
      labels:
        app: "ml-container-{{ . }}"
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: acceleration
                operator: In
                values:
                - gpu
      containers:
      - image: "{{ $.Values.image.repository }}:{{ $.Values.image.tag }}"
        imagePullPolicy: {{ $.Values.image.pullPolicy }}
        name: "ml-container-{{ . }}"
        command:
          - "jupyter"
        args: 
          - "notebook"
          - "--port"
          - "8888"
          - "--no-browser"
          - "--allow-root"
          - "--NotebookApp.password='{{sha1_pass_jupyter}}'"
          - "--NotebookApp.allow_password_change=True"
        ports:
          - containerPort: 8888
        resources:
          limits:
            cpu: "4"
            memory: 8000Mi
            nvidia.com/gpu: "1"
          requests:
            cpu: "2"
            memory: 4000Mi
            nvidia.com/gpu: "1"
        securityContext:
#          allowPrivilegeEscalation: false
          capabilities: {}
#          privileged: false
#          readOnlyRootFilesystem: false
#          runAsNonRoot: false
        volumeMounts:
        - mountPath: /home/{{ . }}
          name: {{name}}-home
        - mountPath: /scratch
          name: {{name}}-scratch
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - hostPath:
          path: /media/scratch/{{ . }}-home/
          type: DirectoryOrCreate
        name: {{name}}-home
      - hostPath:
          path: /media/scratch/{{ . }}
          type: DirectoryOrCreate
        name: {{ . }}-scratch
        
        
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "ml-container-{{ . }}"
  labels:
    app.kubernetes.io/name: "ml-container-{{ . }}"
    app.kubernetes.io/instance: {{ $.Release.Name }}
    app.kubernetes.io/managed-by: {{ $.Release.Service }}
spec:
  replicas: {{ $.Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: "ml-container-{{ . }}"
      app.kubernetes.io/instance: {{ $.Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: "ml-container-{{ . }}"
        app.kubernetes.io/instance: {{ $.Release.Name }}
    spec:
      containers:
        - name: {{ $.Chart.Name }}
          image: "{{ $.Values.image.repository }}:{{ $.Values.image.tag }}"
          imagePullPolicy: {{ $.Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml $.Values.resources | nindent 12 }}
      {{- with $.Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with $.Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with $.Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
---
{{- end }}
